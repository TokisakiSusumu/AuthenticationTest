@page "/protected"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize]
@inject HttpClient Http
@rendermode InteractiveServer

<PageTitle>Protected Page</PageTitle>

<h3>Protected Content</h3>

<AuthorizeView>
    <Authorized>
        <p>This is a protected page. Only authenticated users can see this.</p>
        <p>Your email: @context.User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value</p>
        
        <button class="btn btn-primary" @onclick="TestApiCall">Test Authorized API Call</button>
        
        @if (!string.IsNullOrEmpty(apiResult))
        {
            <div class="alert alert-info mt-3">
                API Response: @apiResult
            </div>
        }
    </Authorized>
</AuthorizeView>

@code {
    private string apiResult = "";

    private async Task TestApiCall()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<WeatherResponse>("api/weather");
            apiResult = $"Weather: {response.Weather}, Temperature: {response.Temperature}°C";
        }
        catch (Exception ex)
        {
            apiResult = "Failed to call API. Make sure you're authenticated.";
        }
    }

    private class WeatherResponse
    {
        public string Weather { get; set; } = "";
        public int Temperature { get; set; }
    }
}