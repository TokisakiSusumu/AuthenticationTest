@page "/register"
@inject HttpClient Http
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Register</PageTitle>

<div class="row">
    <div class="col-md-4">
        <h2>Register</h2>
        <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="form-group mb-3">
                <label>Email:</label>
                <InputText @bind-Value="registerModel.Email" class="form-control" />
            </div>

            <div class="form-group mb-3">
                <label>Password:</label>
                <InputText @bind-Value="registerModel.Password" type="password" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary" disabled="@isLoading">Register</button>
        </EditForm>

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert @(isError ? "alert-danger" : "alert-success") mt-3">@message</div>
        }

        <p class="mt-3">Already have an account? <a href="/login">Login</a></p>
    </div>
</div>

@code {
    private RegisterModel registerModel = new();
    private string message = "";
    private bool isError = false;
    private bool isLoading = false;

    private async Task HandleRegister()
    {
        isLoading = true;
        message = "";

        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/register", registerModel);

            if (response.IsSuccessStatusCode)
            {
                message = "Registration successful! Redirecting to login...";
                isError = false;
                await Task.Delay(2000);
                Navigation.NavigateTo("/login");
            }
            else
            {
                message = "Registration failed. Please try again.";
                isError = true;
            }
        }
        catch
        {
            message = "An error occurred. Please try again.";
            isError = true;
        }
        finally
        {
            isLoading = false;
        }
    }

    public class RegisterModel
    {
        public string Email { get; set; } = "";
        public string Password { get; set; } = "";
    }
}