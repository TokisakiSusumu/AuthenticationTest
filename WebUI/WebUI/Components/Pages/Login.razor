@using WebUI.Client.Components
@page "/login"

@layout WebUI.Components.Layout.MainLayout
@inject AuthService AuthService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Login</PageTitle>

<div class="row">
    <div class="col-md-4">
        <h2>Login</h2>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="form-group mb-3">
                <label>Email:</label>
                <InputText @bind-Value="loginModel.Email" class="form-control" />
            </div>

            <div class="form-group mb-3">
                <label>Password:</label>
                <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                @if (isLoading)
                {
                    <span>Logging in...</span>
                }
                else
                {
                    <span>Login</span>
                }
            </button>
        </EditForm>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3">@errorMessage</div>
        }

        <p class="mt-3">Don't have an account? <a href="/register">Register</a></p>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private string errorMessage = "";
    private bool isLoading = false;

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = "";

        try
        {
            var success = await AuthService.Login(loginModel.Email, loginModel.Password);

            if (success)
            {
                Navigation.NavigateTo("/protected");
            }
            else
            {
                errorMessage = "Invalid email or password";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred. Please try again.";
        }
        finally
        {
            isLoading = false;
        }
    }

    public class LoginModel
    {
        public string Email { get; set; } = "";
        public string Password { get; set; } = "";
    }
}